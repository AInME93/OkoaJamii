"""Localization tables

Revision ID: 7b96fc2fd324
Revises: 9b367c131df2
Create Date: 2019-05-11 15:00:00.047626

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7b96fc2fd324'
down_revision = '9b367c131df2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Country',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('County',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['Country.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('case_staff')
    op.drop_table('Person')
    op.drop_table('Case')
    op.add_column('Alert', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('Alert', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('Alert', sa.Column('deleted_at', sa.DateTime(), nullable=True))
    op.add_column('Alert', sa.Column('deleted_by', sa.Integer(), nullable=True))
    op.add_column('Alert', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('Alert', sa.Column('updated_by', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'Alert', 'User', ['created_by'], ['id'])
    op.create_foreign_key(None, 'Alert', 'User', ['deleted_by'], ['id'])
    op.create_foreign_key(None, 'Alert', 'User', ['updated_by'], ['id'])
    op.add_column('Organization', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('Organization', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('Organization', sa.Column('deleted_at', sa.DateTime(), nullable=True))
    op.add_column('Organization', sa.Column('deleted_by', sa.Integer(), nullable=True))
    op.add_column('Organization', sa.Column('modified_at', sa.DateTime(), nullable=True))
    op.add_column('Organization', sa.Column('modified_by', sa.Integer(), nullable=True))
    op.add_column('Organization', sa.Column('status', sa.Boolean(), nullable=True))
    op.create_foreign_key(None, 'Organization', 'User', ['created_by'], ['id'])
    op.create_foreign_key(None, 'Organization', 'User', ['deleted_by'], ['id'])
    op.create_foreign_key(None, 'Organization', 'User', ['modified_by'], ['id'])
    op.add_column('Role', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('Role', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('Role', sa.Column('deleted_at', sa.DateTime(), nullable=True))
    op.add_column('Role', sa.Column('deleted_by', sa.Integer(), nullable=True))
    op.add_column('Role', sa.Column('modified_at', sa.DateTime(), nullable=True))
    op.add_column('Role', sa.Column('modified_by', sa.Integer(), nullable=True))
    op.add_column('Role', sa.Column('status', sa.Boolean(), nullable=True))
    op.create_foreign_key(None, 'Role', 'User', ['modified_by'], ['id'])
    op.create_foreign_key(None, 'Role', 'User', ['created_by'], ['id'])
    op.create_foreign_key(None, 'Role', 'User', ['deleted_by'], ['id'])
    op.add_column('User', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('User', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('User', sa.Column('deleted_at', sa.DateTime(), nullable=True))
    op.add_column('User', sa.Column('deleted_by', sa.Integer(), nullable=True))
    op.add_column('User', sa.Column('modified_at', sa.DateTime(), nullable=True))
    op.add_column('User', sa.Column('modified_by', sa.Integer(), nullable=True))
    op.add_column('User', sa.Column('status', sa.Boolean(), nullable=True))
    op.create_foreign_key(None, 'User', 'User', ['deleted_by'], ['id'])
    op.create_foreign_key(None, 'User', 'User', ['created_by'], ['id'])
    op.create_foreign_key(None, 'User', 'User', ['modified_by'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'User', type_='foreignkey')
    op.drop_constraint(None, 'User', type_='foreignkey')
    op.drop_constraint(None, 'User', type_='foreignkey')
    op.drop_column('User', 'status')
    op.drop_column('User', 'modified_by')
    op.drop_column('User', 'modified_at')
    op.drop_column('User', 'deleted_by')
    op.drop_column('User', 'deleted_at')
    op.drop_column('User', 'created_by')
    op.drop_column('User', 'created_at')
    op.drop_constraint(None, 'Role', type_='foreignkey')
    op.drop_constraint(None, 'Role', type_='foreignkey')
    op.drop_constraint(None, 'Role', type_='foreignkey')
    op.drop_column('Role', 'status')
    op.drop_column('Role', 'modified_by')
    op.drop_column('Role', 'modified_at')
    op.drop_column('Role', 'deleted_by')
    op.drop_column('Role', 'deleted_at')
    op.drop_column('Role', 'created_by')
    op.drop_column('Role', 'created_at')
    op.drop_constraint(None, 'Organization', type_='foreignkey')
    op.drop_constraint(None, 'Organization', type_='foreignkey')
    op.drop_constraint(None, 'Organization', type_='foreignkey')
    op.drop_column('Organization', 'status')
    op.drop_column('Organization', 'modified_by')
    op.drop_column('Organization', 'modified_at')
    op.drop_column('Organization', 'deleted_by')
    op.drop_column('Organization', 'deleted_at')
    op.drop_column('Organization', 'created_by')
    op.drop_column('Organization', 'created_at')
    op.drop_constraint(None, 'Alert', type_='foreignkey')
    op.drop_constraint(None, 'Alert', type_='foreignkey')
    op.drop_constraint(None, 'Alert', type_='foreignkey')
    op.drop_column('Alert', 'updated_by')
    op.drop_column('Alert', 'updated_at')
    op.drop_column('Alert', 'deleted_by')
    op.drop_column('Alert', 'deleted_at')
    op.drop_column('Alert', 'created_by')
    op.drop_column('Alert', 'created_at')
    op.create_table('Case',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Case_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('victimType', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('victimName', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('perpetratorName', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('reporterName', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('reporterPhone', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('detailsCrime', sa.VARCHAR(length=1250), autoincrement=False, nullable=True),
    sa.Column('detailsPlace', sa.VARCHAR(length=1250), autoincrement=False, nullable=True),
    sa.Column('county', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('constituency', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('urgency', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('assignedOrganization', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('stage', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Case_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Person',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Person_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('identification', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('DOB', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('photo', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('phoneNo1', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('phoneNo2', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('occupation', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('caseCount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('personFirstName', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('personLastName', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('personSecondName', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Person_pkey')
    )
    op.create_table('case_staff',
    sa.Column('case_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['Case.id'], name='case_staff_case_id_fkey')
    )
    op.drop_table('County')
    op.drop_table('Country')
    # ### end Alembic commands ###
