"""Small change

Revision ID: 8054f9b575b5
Revises: e261c7b80f94
Create Date: 2019-10-07 13:08:45.339442

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8054f9b575b5'
down_revision = 'e261c7b80f94'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('constituency', sa.Column('modified_at', sa.DateTime(), nullable=True))
    op.add_column('constituency', sa.Column('modified_by', sa.Integer(), nullable=True))
    op.drop_constraint('constituency_updated_by_fkey', 'constituency', type_='foreignkey')
    op.create_foreign_key(None, 'constituency', 'user', ['modified_by'], ['id'])
    op.drop_column('constituency', 'updated_at')
    op.drop_column('constituency', 'updated_by')
    op.add_column('country', sa.Column('modified_at', sa.DateTime(), nullable=True))
    op.add_column('country', sa.Column('modified_by', sa.Integer(), nullable=True))
    op.drop_constraint('country_updated_by_fkey', 'country', type_='foreignkey')
    op.create_foreign_key(None, 'country', 'user', ['modified_by'], ['id'])
    op.drop_column('country', 'updated_at')
    op.drop_column('country', 'updated_by')
    op.add_column('county', sa.Column('modified_at', sa.DateTime(), nullable=True))
    op.add_column('county', sa.Column('modified_by', sa.Integer(), nullable=True))
    op.drop_constraint('county_updated_by_fkey', 'county', type_='foreignkey')
    op.create_foreign_key(None, 'county', 'user', ['modified_by'], ['id'])
    op.drop_column('county', 'updated_at')
    op.drop_column('county', 'updated_by')
    op.create_foreign_key(None, 'crimealert', 'ward', ['ward'], ['id'])
    op.create_foreign_key(None, 'crimealert', 'country', ['country'], ['id'])
    op.create_foreign_key(None, 'crimealert', 'constituency', ['constituency'], ['id'])
    op.create_foreign_key(None, 'crimealert', 'county', ['county'], ['id'])
    op.create_foreign_key(None, 'role', 'user', ['deleted_by'], ['id'])
    op.create_foreign_key(None, 'role', 'user', ['created_by'], ['id'])
    op.create_foreign_key(None, 'role', 'user', ['modified_by'], ['id'])
    op.create_foreign_key(None, 'roles_users', 'role', ['role_id'], ['id'])
    op.create_foreign_key(None, 'roles_users', 'user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'user', 'organization', ['org_id'], ['id'])
    op.create_foreign_key(None, 'user', 'user', ['modified_by'], ['id'])
    op.create_foreign_key(None, 'user', 'user', ['deleted_by'], ['id'])
    op.create_foreign_key(None, 'user', 'user', ['created_by'], ['id'])
    op.add_column('ward', sa.Column('modified_at', sa.DateTime(), nullable=True))
    op.add_column('ward', sa.Column('modified_by', sa.Integer(), nullable=True))
    op.drop_constraint('ward_updated_by_fkey', 'ward', type_='foreignkey')
    op.create_foreign_key(None, 'ward', 'user', ['modified_by'], ['id'])
    op.drop_column('ward', 'updated_at')
    op.drop_column('ward', 'updated_by')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ward', sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('ward', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'ward', type_='foreignkey')
    op.create_foreign_key('ward_updated_by_fkey', 'ward', 'user', ['updated_by'], ['id'])
    op.drop_column('ward', 'modified_by')
    op.drop_column('ward', 'modified_at')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'roles_users', type_='foreignkey')
    op.drop_constraint(None, 'roles_users', type_='foreignkey')
    op.drop_constraint(None, 'role', type_='foreignkey')
    op.drop_constraint(None, 'role', type_='foreignkey')
    op.drop_constraint(None, 'role', type_='foreignkey')
    op.drop_constraint(None, 'crimealert', type_='foreignkey')
    op.drop_constraint(None, 'crimealert', type_='foreignkey')
    op.drop_constraint(None, 'crimealert', type_='foreignkey')
    op.drop_constraint(None, 'crimealert', type_='foreignkey')
    op.add_column('county', sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('county', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'county', type_='foreignkey')
    op.create_foreign_key('county_updated_by_fkey', 'county', 'user', ['updated_by'], ['id'])
    op.drop_column('county', 'modified_by')
    op.drop_column('county', 'modified_at')
    op.add_column('country', sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('country', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'country', type_='foreignkey')
    op.create_foreign_key('country_updated_by_fkey', 'country', 'user', ['updated_by'], ['id'])
    op.drop_column('country', 'modified_by')
    op.drop_column('country', 'modified_at')
    op.add_column('constituency', sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('constituency', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'constituency', type_='foreignkey')
    op.create_foreign_key('constituency_updated_by_fkey', 'constituency', 'user', ['updated_by'], ['id'])
    op.drop_column('constituency', 'modified_by')
    op.drop_column('constituency', 'modified_at')
    # ### end Alembic commands ###
